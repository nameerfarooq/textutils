{"version":3,"sources":["components/Navbar.js","components/TextInput.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","theme","href","title","type","id","a","b","onClick","togglerLight","name","value","htmlFor","togglerRed","togglerBlue","togglerGreen","defaultProps","c","TextInput","useState","text","setText","btnColor","color","heading","rows","onChange","event","target","style","backgroundColor","border","updatedText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","execCommand","replace","split","length","Alert","alert","alertColor","charAt","slice","msg","App","setmode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1e682b18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode.theme} bg-${props.mode.theme} `}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  {props.a}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.b}\r\n                </a>\r\n              </li>\r\n             \r\n              \r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <div className=\"form-check form-check-inline\">\r\n                <input\r\n                  onClick={props.togglerLight}\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"inlineRadioOptions\"\r\n                  id=\"inlineRadio4\"\r\n                  value=\"option4\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio4\">\r\n                  Lightmode\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <input\r\n                  onClick={props.togglerRed}\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"inlineRadioOptions\"\r\n                  id=\"inlineRadio1\"\r\n                  value=\"option1\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                  Redmode\r\n                </label>\r\n              </div>\r\n              <div  className=\"form-check form-check-inline\">\r\n                <input\r\n                onClick={props.togglerBlue}\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"inlineRadioOptions\"\r\n                  id=\"inlineRadio2\"\r\n                  value=\"option2\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                Bluemode\r\n                </label>\r\n              </div>\r\n              <div  className=\"form-check form-check-inline\">\r\n                <input\r\n                onClick={props.togglerGreen}\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"inlineRadioOptions\"\r\n                  id=\"inlineRadio3\"\r\n                  value=\"option3\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio3\">\r\n                Greenmode\r\n                </label>\r\n              </div>\r\n\r\n              \r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  a: PropTypes.string.isRequired,\r\n  b: PropTypes.string.isRequired,\r\n  c: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"enter Title\",\r\n  a: \"first tab\",\r\n  b: \"second tab\",\r\n  c: \"third tab\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Textinput.css\";\r\n\r\nexport default function TextInput(props) {\r\n  const [text, setText] = useState(props.a);\r\n\r\n  const Uppercase = () => {\r\n    var updatedText = text.toUpperCase();\r\n    setText(updatedText);\r\n    props.showAlert(\"Text formatted to Upper case\",\"success\",\"warning\")\r\n  };\r\n  const Lowercase = () => {\r\n    var updatedText = text.toLowerCase();\r\n    setText(updatedText);\r\n    props.showAlert(\"Text formatted to Lower case\",\"success\",\"danger\")\r\n  };\r\n  const handleText = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const  Copy=()=> {\r\n    let textarea = document.getElementById(\"mytext\");\r\n    textarea.select();\r\n    document.execCommand(\"copy\");\r\n    props.showAlert(\"Text Copied to Clipboard\",\"success\",\"success\")\r\n  }\r\n  const  ClearText=()=> {\r\n    setText(\"\")\r\n    props.showAlert(\"Text Cleared\",\"success\",\"warning\")\r\n  }\r\n  const  extraSpace=()=> {\r\n    var updatedText = text.replace(/  +/g, ' ')\r\n    setText(updatedText);\r\n    props.showAlert(\"extra spaces removed\",\"success\",\"success\")\r\n  }\r\n  var btnColor =\"\"\r\nif(props.mode.color===\"white\"){\r\n btnColor = \"\"\r\n}else if(props.mode.color===\"blue\"){\r\n   btnColor = \"#003154\"\r\n\r\n}else if(props.mode.color===\"red\"){\r\n   btnColor = \"#690000\"\r\n\r\n}else if(props.mode.color===\"green\"){\r\n   btnColor = \"#00350c\"\r\n\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-\">\r\n        <div className=\"mb-3\">\r\n          <h3>{props.heading}</h3>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mytext\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleText}\r\n          ></textarea>\r\n          <button style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2 \" onClick={Uppercase}>\r\n            UpperCase\r\n          </button>\r\n          <button style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2\" onClick={Lowercase}>\r\n            LowerCase\r\n          </button>\r\n          <button style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2\" onClick={Copy}>\r\n            CopyText\r\n          </button>\r\n          <button style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2\" onClick={ClearText}>\r\n            ClearText\r\n          </button>\r\n          <button style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2\" onClick={extraSpace}>\r\n            clear Extra space\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container outer my-3\">\r\n        <div className=\"inner1\">\r\n         \r\n\r\n          <h2 style={{ color: props.mode.theme === \"dark\" ? \"yellow\":\"black\"  }}>\r\n            Your Text Summary\r\n          </h2>\r\n          <p>\r\n         \r\n          \r\n          \r\n           {text.split(\" \").length-1} words and {text.length} characters\r\n          </p>\r\n        \r\n\r\n          <p>read time - {0.008 * text.split(\" \").length}</p>\r\n          <h3 style={{ color: props.mode.theme === \"dark\" ? \"yellow\":\"black\"  }}>\r\n            Preview\r\n          </h3>\r\n          <p>{text.length > 0 ? text : \"enter some text to preview\"}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nTextInput.propTypes = {\r\n  heading: PropTypes.string.isRequired,\r\n  a: PropTypes.string.isRequired,\r\n};\r\nTextInput.defaultProps = {\r\n  heading: \"enter you text\",\r\n  a: \"hello world\",\r\n};\r\n","import React from \"react\";\r\nimport './Navbar.css'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div className=\"container alertUpper\">\r\n        <div\r\n          className={`alert alert-${props.alert.alertColor} \" role=\"alert  fade show fixed-top alertIMP`}\r\n        >\r\n          <strong>\r\n            {props.alert.type.charAt(0).toUpperCase() +\r\n              props.alert.type.slice(\"1\")}\r\n          </strong>{\" \"}\r\n          {props.alert.msg}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport TextInput from \"./components/TextInput\";\nimport About from './components/About';\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState({\n    theme : \"light\",\n    color : \"white\"\n  });\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type, alertColor) => {\n    setAlert({\n      msg: message,\n      type: type,\n      alertColor: alertColor,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleModeLight = () => {\n    if (mode.color !== \"white\") {\n      setmode({\n        theme : \"light\",\n        color : \"white\"\n      });\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light mode enabled\", \"success\", \"success\");\n    }\n  };\n  const toggleModeBlue = () => {\n    if (mode.color !== \"blue\") {\n      setmode({\n        theme : \"dark\",\n        color : \"blue\"\n      });\n      document.body.style.backgroundColor = \"#003154\";\n      document.body.style.color = \"white\";\n      showAlert(\"Blue mode enabled\", \"success\", \"success\");\n    }\n  };\n  const toggleModeRed = () => {\n    if (mode.color !== \"red\") {\n      setmode({\n        theme : \"dark\",\n        color : \"red\"\n      });\n      document.body.style.backgroundColor = \"#690000\";\n      document.body.style.color = \"white\";\n      showAlert(\"Red mode enabled\", \"success\", \"success\");\n    }\n  };\n  const toggleModeGreen = () => {\n    if (mode.color !== \"green\") {\n      setmode({\n        theme : \"dark\",\n        color : \"green\"\n      });\n      document.body.style.backgroundColor = \"#00350c\";\n      document.body.style.color = \"white\";\n      showAlert(\"Green mode enabled\", \"success\", \"success\");\n    }\n  };\n\n  return (\n    <>\n   \n      <Navbar\n        title=\"TextUtils\"\n        a=\"About\"\n        b=\"Text\"\n        c=\"FollowUs\"\n        mode={mode}\n        togglerLight={toggleModeLight}\n        togglerBlue={toggleModeBlue}\n        togglerRed={toggleModeRed}\n        togglerGreen={toggleModeGreen}\n        showAlert={showAlert}\n      />\n      <Alert alert={alert} />\n      \n         \n          \n          \n          <TextInput\n        heading=\"enter your text to analyze\"\n        a=\"\"\n        mode={mode}\n        showAlert={showAlert}\n      />\n     \n          \n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}